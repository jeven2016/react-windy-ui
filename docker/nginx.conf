
# Recommended: General Settings / Error Log (Tune for Environment)
# - You should decrease log level in production and/or implement log rotation!
# - Nginx Log Levels: debug, info, notice, warn, error, crit, alert, emerg
error_log                        /dev/stdout  notice;

#工作进程数

# Recommended: General Settings / Worker Processes (Tune for Environment)
worker_processes                 auto;      # Omit/Use 1 for Testing
pid        /var/run/nginx.pid;

##worker_rlimit_core               500M;      # Enable Core Files
worker_rlimit_nofile 500000;


# EXPERIMENTAL: Cloud Gate Dynamic Module (edit path to correct location)
# Warning: Must be set if-and-only-if using the Dynamic Module edition!
# load_module                      /u01/data/idcs-cloudgate/lib/idcs_cloudgate_ngx.so;


events {
    #使用的网络I/O模型，linux为epoll, FreeBSD为kqueue
    use epoll;

    #允许的连接数
    worker_connections 16384;  #单个后台worker process进程的最大并发链接数

    #you can utilize multi_accept in order for a worker to accept all new connections at one time.
    multi_accept on;
}

#设定http服务器
http {

    # Required: Headers with Underscores
    underscores_in_headers         on;

    # Recommended: Tuning (Unofficial - Use At Your Own Risk)
    proxy_buffer_size              16k;
    proxy_buffers                  4 128k;
    proxy_busy_buffers_size        256k;
    proxy_read_timeout             300s;
    proxy_headers_hash_bucket_size 256;
    client_header_buffer_size      16k;
    server_names_hash_bucket_size  512;
    server_names_hash_max_size     2048;
    variables_hash_bucket_size     512;
    variables_hash_max_size        2048;
    keepalive_timeout              60s;     #连接超时时间
    keepalive_requests             2000000;
    open_file_cache max=2000 inactive=20s;   #max:设置最大文件描述符的数量，如果超出时使用LRU算法，将最少使用的数据清出内存, inactive: 在设置的时间内没有使用此文件描述符时，自动删除。
    open_file_cache_valid 60s;               #设定检测周期，查看日志文件及目录是否存在
    open_file_cache_min_uses 5;              #在inactive时间内，如果日志使用次数超过指定值。则将该日志的文件描述符计入缓存
    open_file_cache_errors off;
    server_tokens off;

    ##
    # Basic Settings
    ##

    #disable_symlinks off;

    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
    #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile on;

    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    # server_names_hash_bucket_size 64;
#     add_header Access-Control-Allow-Headers Authorization;

    #如果port_in_redirect为off时，那么始终按照默认的80端口；如果该指令打开，那么将会返回当前正在监听的端口。
    #如果server_name_in_redirect为off时，那么将会以当前服务器的IP地址进行拼接URL；如果该命令为on，那么首先查找server_name，
    #如果没有找到，查找请求头的HOST字段，如果没有，则以当前服务器的IP进行拼接
    server_name_in_redirect off;

    #以下为优化参数
    client_body_buffer_size    128k;
    client_max_body_size       100m;  #能够上传的文件大小
    large_client_header_buffers  4 4k;
    output_buffers   1 32k;
    postpone_output  1460;

    client_header_timeout  3m;
    client_body_timeout    3m;
    send_timeout           3m;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Logging Settings # [ debug | info | notice | warn | error | crit | alert | emerg ]
    ##
    #日志格式设定
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" $http_x_forwarded_for';

    access_log /dev/stdout main;
    error_log /dev/stdout;


    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";
    gzip_min_length  500;
    gzip_buffers     16 8k;
    gzip_types     text/plain text/css text/javascript text/xml application/x-javascript application/xml application/json application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype    application/x-font-ttf font/eot font/opentype font/otf image/svg+xml image/vnd.microsoft.icon;
    gzip_disable "MSIE [1-6]\.";

    gzip_vary on;
    gzip_comp_level 7;

    server {
        listen 80;

        root /build;

        index index.html;

        server_name super666.cn;

        location / {
            try_files $uri $uri/ /index.html;
            expires 1d;
            add_header Cache-Control "public";
        }

    }
}