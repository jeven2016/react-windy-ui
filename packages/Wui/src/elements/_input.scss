%input-active-base {
  z-index: map_get($z-index, "one");
  position: relative;

  &:not(.simple-input) {
    border-color: $input-border-active-color;

    &.with-input-box {
      box-shadow: $input-box-shadow;
    }
  }

  &.simple-input {
    &:after {
      @include make-block(absolute) {
        border-radius: 50%;
        left: 0;
        top: calc(100%);
        content: '';
        height: 0.1875rem;;
        width: 100%;;
        background: $input-border-active-color;
        transition: width 0.3s;;
        animation: change-width-smoothly 0.3s;;
        z-index: 1;
      }
    }
  }
}

.input {
  //padding: $input-default-padding;
  border: $input-border;
  @include border-radius($input-border-radius);
  outline: $input-outline;
  line-height: $input-line-height;
  -webkit-appearance: none;
  transition: $default-transition;
  background: $input-background;
  color: $input-color;
  //font-size: $input-font-size;

  &.simple-input {
    position: relative;
    border: none;
    border-bottom: $input-border;
    @include border-radius(0);
    box-shadow: none;

    &:after {
      @include make-block(absolute) {
        //border-radius: 50%;
        left: 0;
        top: calc(100% - 1px);
        content: '';
        height: 2px;
        width: 100%;
        background: $input-border-active-color;
        transition: width 0.3s;;
        animation: change-width-smoothly 0.3s forwards;
        z-index: 1;
      }
    }
  }

  &.read-only {
    cursor: pointer;
    caret-color: transparent; //don't show caret in input since it's always blinking
  }

  // it's better to set the width and height to 0px. Otherwise,
  // IE10 ignores the padding defined on the field -- padding-right --
  // which was intended to keep the text from typing over the 'X' icon
  // that I overlayed on the input field
  &::-ms-clear {
    width: 0;
    height: 0;
  }

  &.block {
    @include make-flex {
      width: $input-block-width;
    }
  }

  @include input-variant-size();

  @include add-disabled-conf;

  @include make-placeholder {
    color: $input-placeholder-color;
  }

  /**
  * Simple input
   */
  &.simple {
    @include border-radius(0);
    border-left: $input-simple-border-left;
    border-top: $input-simple-border-top;
    border-right: $input-simple-border-right;
    transition: $input-simple-transition;

    &:active, &:focus {
      border-bottom-width: 2px;
      box-shadow: $input-simple-box-shadow;
    }
  }

  //enabled for non-simple input
  &.with-focus {
    @include focus-active2 {
      @extend %input-active-base;
    }
  }
}


textarea.input {
  max-width: 100%;
}

/**
* Icon input
 */
.icon-input {
  @include make-inline-flex-center;
  position: relative;
  border: $default-border;
  border-radius: $default-border-radius;

  @include focus-active2 {
    @extend %input-active-base;
  }

  &.block, & > .input {
    @include make-flex {
      width: $input-block-width;
    }
  }

  & > .input {
    padding: 0;
    border: none;
    flex: 1 1 auto;
  }

  > .icon-column {
    color: $icon-input-icon-text-color;
    cursor: $icon-input-icon-cursor;
    width: auto;

    &:hover, &:focus {
      &:not(.disabled) {
        color: $input-border-active-color;
      }
    }

    &.right {
      margin: 0 0 0 .5rem !important;
    }
  }

  //input in left, icon in right
  &.large {
    padding: $elem-large-padding;

    > .icon-column:not(.right) {
      margin: 0 0 0 .5rem;
    }
  }

  &.medium {
    padding: $elem-default-padding;

    > .icon-column:not(.right) {
      margin: 0 0 0 .5rem;
    }
  }

  &.small {
    padding: $elem-small-padding;

    > .icon-column:not(.right) {
      margin: 0 0 0 .5rem;
    }
  }

  &.left-icon {
    flex-direction: row-reverse;

    &.large {
      > .icon-column:not(.right) {
        margin: 0 .5rem 0 0;
      }
    }

    &.medium {
      > .icon-column:not(.right) {
        margin: 0 .5rem 0 0;
      }
    }


    &.small {
      > .icon-column:not(.right) {
        margin: 0 .5rem 0 0;
      }
    }
  }

  @include add-disabled-conf;

}

@include make-special-input('ok', $text-ok-color);
@include make-special-input('warning', $text-warning-color);
@include make-special-input('error', $text-error-color);