
.text-field {
  @include make-inline-flex {
    position: relative;
    flex-direction: column;
    justify-content: center;
    transition: box-shadow .15s;
  }

  &.block {
    @include make-flex {
      flex: 1 1 auto;
      width: 100%;
    }
  }

  > .tf-label {
    pointer-events: none;
    position: absolute;
    z-index: map_get($z-index, 'widget');
    transition: font-size .2s, color .2s;
    will-change: font-size, color, top, transform;
  }

  .tf-required {
    margin-left: .25rem;
    pointer-events: none;
  }

  .tf-input {
    padding: 0 1rem;
    border: none;
    height: 100%;
    width: 100%;
    outline: $input-outline;
    line-height: $input-line-height;
    -webkit-appearance: none;
    transition: $default-transition;
    background: transparent;
    font-size: map-get($font-size, 'normal');
    color: $tf-input-color;
  }

  .tf-input-wrapper {
    @include make-flex {
      height: 100%;
      align-items: center;
    }

    .tf-input {
      height: 100%;
      flex: 1 1 auto;
      padding: 0;
      font-size: inherit;
    }

    .tf-col {
      @include make-flex-vertical-center {
        &.right {
          padding: 0 0 0 .25rem;
        }

        &.left {
          padding: 0 .25rem 0 0;
        }
      }
    }

    .tf-col.right {
      padding: 0 0 0 .25rem;
    }

    .tf-col.left {
      padding: 0 .25rem 0 0;
    }
  }

  @include add-disabled-conf(true) {
    > .tf-label {
      color: $text-comment-color;
    }
    > .tf-input {
      @include add-disabled-conf;
    }
  }

  //override properties of select
  .select {
    border: none;
    box-shadow: none;

    &:focus, &:hover, &.active {
      border: none;
      box-shadow: none;
    }
  }

}

.text-field.outline {
  height: 3.5rem;
  border: 1px solid;
  border-radius: $default-border-radius;
  border-color: $gray;


  > .tf-label {
    position: absolute;
    color: $tf-label-placeholder;
    top: 50%;
    transform: translate3d(1rem, -50%, 0);
  }

  > .tf-input-wrapper {
    padding: 0 1rem;
  }

  &.show {
    > .tf-label {
      font-size: .75rem;
      padding: 0 .25rem;
      background: $tf-label-show;
      color: $tf-label-color;

      //won't be applied in react project
      //top: 0;
      //transform: translate3d(0.75rem, -50%, 0);
    }

    &.focused {
      border-color: transparent;

      &:not(.error-info) {
        box-shadow: 0 0 0 2px $blue inset;

        > .tf-label {
          color: $blue;
        }
      }

    }
  }

  &.small {
    height: 2.5rem;

    > .tf-input, > .tf-input-wrapper {
      font-size: map-get($font-size, 'normal');
    }
  }

  &.large {
    height: 4rem;

    > .tf-input, > .tf-input-wrapper {
      font-size: map-get($font-size, 'xlarge');
    }

    &.show > .tf-label {
      font-size: map-get($font-size, 'normal');
    }
  }
}

.text-field.underline {
  border: none;

  > .tf-label {
    left: 0;
    color: $tf-underline-label-color;

    + .tf-input, + .tf-input-wrapper {
      margin-top: 1rem;
    }
  }

  > .tf-input, > .tf-input-wrapper {
    //width: 100%;
    padding: 0.5rem 0;
    border-bottom: 1px solid $gray;
  }

  &.show {
    > .tf-label {
      font-size: .75rem;
    }

    &.focused {

      &:not(.error-info) {
        &.with-bottom-bar {
          @include simple-bottom-bar;
        }

        > .tf-label {
          color: $blue;
        }
      }

    }
  }

  &.small {
    > .tf-input, > .tf-input-wrapper {
      font-size: map-get($font-size, 'normal');
    }
  }

  &.large {
    > .tf-input, > .tf-input-wrapper {
      font-size: map-get($font-size, 'xlarge');
    }

    &.show > .tf-label {
      font-size: map-get($font-size, 'small');
    }
  }
}


.text-field {
  @include make-special-text-field;
}